Question link- https://leetcode.com/explore/featured/card/may-leetcoding-challenge/538/week-5-may-29th-may-31st/3346/

Solution:

int min(int a, int b, int c){
       if (a <= b && a <= c) 
        return a;
  
    else if (b <= a && b <= c) 
        return b;
  
    else
        return c; 
   
     }
    
    int minDistance(string word1, string word2) {
        
        int m= word1.size();
        int n= word2.size();
        
        int dp[m+1][n+1];
        
        for(int i=0; i<=m; i++){
            for(int j=0; j<=n; j++){
                
                if(i==0) dp[i][j]=j;
                
                else if(j==0) dp[i][j]=i;
                
                else if(word1[i-1]==word2[j-1])
                    dp[i][j]= dp[i-1][j-1];
                
                else
                    dp[i][j]= 1+ min(dp[i-1][j], dp[i][j-1], dp[i-1][j-1]);
            }
        }
        return dp[m][n];
    }
