Question link- https://leetcode.com/explore/featured/card/may-leetcoding-challenge/537/week-4-may-22nd-may-28th/3340/

Solution: LCS Approach

 int maxUncrossedLines(vector<int>& A, vector<int>& B) {
        int m= A.size();
        int n= B.size();
        
        int dp[m+1][n+1];
        
        memset(dp, 0, sizeof(dp));
        
        for (int i = 1; i <= m; ++i)
            for (int j = 1; j <= n; ++j)
                dp[i][j] = A[i - 1] == B[j - 1] ? dp[i - 1][j - 1] + 1 : max(dp[i][j - 1], dp[i - 1][j]);
        return dp[m][n];
    }
