Question link- https://leetcode.com/explore/featured/card/may-leetcoding-challenge/535/week-2-may-8th-may-14th/3323/

Solution-

Approach 1 (Using cross product) :

if(x1*y2-x2*y1)=0 which means points are collinear.


bool checkStraightLine(vector<vector<int>>& coordinates) {
        
        int n = coordinates.size();
        
		// Base case: Two points are always collinear
            if(n == 2) 
            return true;
        
        coordinates.push_back(coordinates[0]);
		// long int to prevent overflow
        
        long area = 0;
        for(int i=0; i<n; i++) {
         int x1 = coordinates[i][0], y1 = coordinates[i][1], x2 = coordinates[i+1][0], y2 = coordinates[i+1][1];
            
            area += x1*y2 - x2*y1;
        }
        
        return (area == 0);
    }


Approach 2 (Using Slope form)

bool checkStraightLine(vector<vector<int>>& coordinates) {
        
        double slope = abs(double(coordinates[0][1] - coordinates[1][1]) / double(coordinates[0][0] - coordinates[1][0]));
        
        for (int i = 2; i < coordinates.size(); ++i) {
            double other = abs(double(coordinates[0][1] - coordinates[i][1]) / double(coordinates[0][0] - coordinates[i][0]));
            
            if (other != slope) {
                return false;
            }
        }
        
        return true;
    }
